package client

import (
	"k8s.io/client-go/rest"
	// "k8s.io/client-go/dynamic"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

func (c *Client) GetTest(context, namespace, resource string) (*rest.Result, error) {
	cl, err := c.getContextInterface(context)

	if err != nil {
		return nil, err
	}

	req := cl.CoreV1().RESTClient().Get().Namespace(namespace).Resource(resource)

	res := req.Do()

	return &res, nil
}

func (c *Client) DiscoveryTest(context string) ([]*metav1.APIGroup, []*metav1.APIResourceList, error) {
	cl, err := c.getContextInterface(context)

	if err != nil {
		return nil, nil, err
	}

	return cl.DiscoveryClient.ServerGroupsAndResources()
}

func (c *Client) GenericList(context, namespace, name string) (interface{}, error) {
	cl, err := c.getContextInterface(context)

	if err != nil {
		return nil, err
	}

	res, err := cl.DiscoveryClient.ServerResources()

	return res, err
}
